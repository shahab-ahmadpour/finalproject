@using App.Domain.Core.Locations
@using App.Domain.Core.Skills.Entities
@using System.Linq
@model App.Domain.Core.DTO.Users.Experts.EditExpertDto
@{
    ViewData["Title"] = "ویرایش پروفایل کارشناس";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";

    var provinces = ViewBag.Provinces as List<Province> ?? new List<Province>();
    var cities = ViewBag.Cities as List<City> ?? new List<City>();
    var expertSkills = ViewBag.ExpertSkills as List<App.Domain.Core.DTO.Skills.SkillDto> ?? new List<App.Domain.Core.DTO.Skills.SkillDto>();
    var subHomeServices = ViewBag.SubHomeServices as List<App.Domain.Core.DTO.SubHomeServices.SubHomeServiceListItemDto> ?? new List<App.Domain.Core.DTO.SubHomeServices.SubHomeServiceListItemDto>();
}

<div class="container py-4">
    <!-- بخش نمایش پیام‌ها -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <!-- نمایش خطاهای اعتبارسنجی اگر وجود داشته باشد -->
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var item in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@item.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <div class="card">
        <div class="card-header">
            <h4>ویرایش پروفایل</h4>
        </div>
        <div class="card-body">
            <form method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="AppUserId" />
                <input type="hidden" asp-for="ProfilePicture" />

                <!-- اطلاعات شخصی -->
                <div class="row">
                    <div class="col-md-4">
                        <div class="text-center mb-3">
                            @if (!string.IsNullOrEmpty(Model.ProfilePicture))
                            {
                                <img src="@Model.ProfilePicture" alt="profile" class="img-thumbnail" style="max-width: 200px;" />
                            }
                            else
                            {
                                <img src="/images/default-avatar.png" alt="profile" class="img-thumbnail" style="max-width: 200px;" />
                            }
                            <div class="mt-2">
                                <input type="file" class="form-control" name="ProfilePictureFile" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="FirstName" class="form-label">نام</label>
                                <input asp-for="FirstName" class="form-control" />
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="LastName" class="form-label">نام خانوادگی</label>
                                <input asp-for="LastName" class="form-control" />
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="PhoneNumber" class="form-label">شماره تماس</label>
                            <input asp-for="PhoneNumber" class="form-control" />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Address" class="form-label">آدرس</label>
                            <textarea asp-for="Address" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="State" class="form-label">استان</label>
                                <select id="stateSelect" asp-for="State" class="form-select">
                                    <option value="">-- انتخاب استان --</option>
                                    @foreach (var province in provinces)
                                    {
                                        <option value="@province.Name" selected="@(province.Name == Model.State)">@province.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="State" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="City" class="form-label">شهر</label>
                                <select id="citySelect" asp-for="City" class="form-select">
                                    <option value="">-- ابتدا استان را انتخاب کنید --</option>
                                    @foreach (var city in cities)
                                    {
                                        <option value="@city.Name" selected="@(city.Name == Model.City)">@city.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="City" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- دکمه‌های ذخیره -->
                <div class="mt-4 text-end">
                    <button type="submit" class="btn btn-primary">ذخیره تغییرات</button>
                    <a asp-action="Dashboard" class="btn btn-secondary">بازگشت</a>
                </div>
            </form>
        </div>
    </div>

    <!-- بخش مهارت‌ها -->
    <div class="card mt-4">
        <div class="card-header">
            <h4>مهارت‌های من</h4>
        </div>
        <div class="card-body">
            <!-- لیست مهارت‌های موجود -->
            <div class="mb-4">
                <h5>مهارت‌های فعلی</h5>
                <div class="d-flex flex-wrap">
                    <p>تعداد مهارت‌ها: @(expertSkills.Count)</p>
                    @if (expertSkills.Any())
                    {
                        foreach (var skill in expertSkills)
                        {
                            <div class="border rounded p-2 m-1 d-flex align-items-center">
                                <span>@skill.Name</span>
                                <button type="button" class="btn btn-sm btn-link text-danger ms-2 remove-skill"
                                        data-skill-id="@skill.SubHomeServiceId">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info w-100">هنوز مهارتی ثبت نشده است.</div>
                    }
                </div>
            </div>

            <div>
                <h5>افزودن مهارت جدید</h5>
                <div class="row">
                    <div class="col-md-8">
                        <select id="skillSelect" class="form-select">
                            <option value="">-- انتخاب مهارت --</option>
                            @foreach (var service in subHomeServices.Where(s => s.IsActive))
                            {
                                <option value="@service.Id">@service.Name</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        <button id="addSkillBtn" type="button" class="btn btn-success w-100">افزودن مهارت</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // بارگذاری شهرها با تغییر استان
        $("#stateSelect").change(function() {
            var provinceName = $(this).val();
            if (provinceName) {
                $.ajax({
                    url: '/Expert/GetCitiesByProvinceName',
                    type: 'GET',
                    data: { provinceName: provinceName },
                    success: function(cities) {
                        var citySelect = $("#citySelect");
                        citySelect.empty();
                        citySelect.append('<option value="">-- انتخاب شهر --</option>');
                        $.each(cities, function(i, city) {
                            citySelect.append($('<option></option>').val(city.name).text(city.name));
                        });
                    },
                    error: function(xhr, status, error) {
                        console.error("Error loading cities:", error);
                        alert("خطا در بارگذاری شهرها");
                    }
                });
            } else {
                $("#citySelect").empty();
                $("#citySelect").append('<option value="">-- ابتدا استان را انتخاب کنید --</option>');
            }
        });

        $("#addSkillBtn").click(function() {
            var skillId = $("#skillSelect").val();
            if (!skillId) {
                alert("لطفاً یک مهارت انتخاب کنید");
                return;
            }

            $.ajax({
                url: '/Expert/AddSkill',
                type: 'POST',
                data: { subHomeServiceId: skillId },
                success: function(result) {
                    if (result.success) {
                        alert(result.message);
                        location.reload();
                    } else {
                        alert(result.message || "خطا در افزودن مهارت");
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Error adding skill:", error);
                    alert("خطا در ارتباط با سرور");
                }
            });
        });

            $(".remove-skill").click(function() {
                if (confirm("آیا از حذف این مهارت اطمینان دارید؟")) {
                    var skillId = $(this).data("skill-id");
                    $.ajax({
                        url: '@Url.Action("RemoveSkill", "Expert")',
                        type: 'POST',
                        data: { subHomeServiceId: skillId },
                        success: function(result) {
                            console.log("Remove skill result:", result);
                            if (result.success) {
                                alert(result.message);
                                location.reload();
                            } else {
                                alert(result.message || "خطا در حذف مهارت");
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Error removing skill:", error);
                            alert("خطا در ارتباط با سرور");
                        }
                    });
                }
            });
        });
    </script>
}